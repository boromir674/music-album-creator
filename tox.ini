[tox]
envlist = clean,check,py35-cover,quality,codecov,
skip_missing_interpreters = {env:TOX_SKIP_MISSING_INTERPRETERS:True}
passenv = TOXENV CI TRAVIS TRAVIS_* CODECOV_*

[testenv]
basepython =
    {docs,spell,dev,dev-cov,notebook}: {env:TOXPYTHON:python3}
    {bootstrap,clean,check,report,codecov,coveralls,quality}: {env:TOXPYTHON:python3}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHOUNBUFFERED=yes
    PIP_DISABLE_PIP_VERSION_CHECK=1
    VIRTUALENV_NO_DOWNLOAD=1
passenv =
    # See https://github.com/codecov/codecov-python/blob/5b9d539a6a09bc84501b381b563956295478651a/README.md#using-tox
    codecov: TOXENV
    codecov: CI
    codecov: TRAVIS TRAVIS_*
; deps =
;     pytest
;     pytest-cov
;     setuptools >= 40.0.0
;     -rrequirements.txt
commands =
    {posargs:pytest --cov --cov-report=term-missing -vv}
;    {posargs:pytest -vv --ignore=src}


[testenv:dev]
description = Install in 'edit' mode and test
usedevelop = true
extras = test
commands = pytest -ra {posargs:tests -vv}

[testenv:dev-cov]
description = Install in 'edit' mode, Test & measure Coverage
usedevelop = true
extras = test
commands =
    pytest -ra --cov --cov-report=term-missing \
      --cov-report=html:{envdir}/htmlcov --cov-context=test \
      --cov-report=xml:{toxworkdir}/coverage.{envname}.xml \
      {posargs:-n auto} {toxinidir}{/}tests


[testenv:clean]
deps = coverage
skip_install = true
commands = coverage erase

[testenv:notebook]
description = Run ML ops in jupyter notebook
extras = notebook
usedevelop = true
commands =
    ; poetry install -E notebook
    jupyter notebook
; jupyter notebook

[testenv:check]
deps =
    docutils
    readme-renderer
    pygments
    check-manifest
skip_install = true
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest {toxinidir}

#######################################################################


[testenv:py27-cover]
basepython = {env:TOXPYTHON:python2.7}
usedevelop = true
[testenv:py35-cover]
basepython = {env:TOXPYTHON:python3.5}
usedevelop = true
[testenv:py36-cover]
basepython = {env:TOXPYTHON:python3.6}
usedevelop = true
[testenv:py37-cover]
basepython = {env:TOXPYTHON:python3.7}
usedevelop = true

[testenv:py35-nocov]
basepython = {env:TOXPYTHON:python3.5}
[testenv:py36-nocov]
basepython = {env:TOXPYTHON:python3.6}
[testenv:py37-nocov]
basepython = {env:TOXPYTHON:python3.7}

[testenv:py37-build]
basepython = {env:TOXPYTHON:python3.7}

[testenv:codecov]
deps = codecov
skip_install = true
commands =
    coverage xml --ignore-errors
    codecov []


#####################################################################

[testenv:quality]
deps =
    flake8
    pygments
    docutils
    readme-renderer
    isort
skip_install = true
commands =
    flake8 src tests setup.py
    isort --verbose --check-only --diff --recursive src tests setup.py

[flake8]
# select the type of style errors to check
select = B,C,E,F,I,N,S,W

# If True: disable skipping warning when '# noqa' is found
# If False: skips lines that have '# noqa'; does not check them
disable-noqa = False

# show the source file generating a warning
show-source  = True
# check syntax of the doctests
doctests     = True

# Codes: http://flake8.pycqa.org/en/latest/user/error-codes.html
ignore =
    # multiple spaces before operator
    E221,
    # too many blank lines
    E302,
    # too many blank lines
    E303,
    # expected 2 blank lines after class or function definition
    E305,
    # function name should be lowercase
    N802,
    # argument name should be lowercase
    N803,
    # first argument of a method should be named 'self'
    N805,
    # variable in function should be lowercase
    N806,
    # lowercase imported as non lowercase
    N812,
    # variable 'rawHeaders' in class scope should not be mixedCase
    N815,
    # variable 'noneIO' in global scope should not be mixedCase
    N816,
    # line break after binary operator (W503 and W504 are opposites)
    W504,
    # line too long
    E501,
    # multiple statements on one line (colon)
    E701,
    # too many leading # for block comment
    E266,
    # missing whitespace around arithmetic operator
    E226,
    # module level import not at top of file
    E402


[testenv:coveralls]
# requires COVERALLS_REPO_TOKEN
deps =
    coveralls
skip_install = true
commands =
    coveralls []


[testenv:bootstrap]
deps =
    jinja2
    matrix
skip_install = true
commands =
    python ci/bootstrap.py


[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage report
    coverage html

########################### DEV ###########################
[testenv:active]
basepython = {env:TOXPYTHON:python3.5}
deps = -rrequirements.txt
usedevelop = true
commands = create-album

[testenv:splitters]
basepython = {env:TOXPYTHON:python3.5}
deps = 
    pytest
    pytest-cov
usedevelop = true
commands = {posargs:pytest --cov --cov-report=term-missing -vv -k test_splitters}

[testenv:offline]
basepython = {env:TOXPYTHON:python3.5}
usedevelop = true
commands = {posargs:pytest --cov --cov-report=term-missing -vv -k 'not test_downloading'}

[testenv:integration]
basepython = {env:TOXPYTHON:python3.6}
deps = 
    pytest
    mock
usedevelop = false
commands = {posargs:pytest  -vv -k test_create_album_program}


############## DOCS ##############

[testenv:spell]
setenv =
    SPELLCHECK=1
use_develop = true
deps =
    setuptools >= 40.0.0
    -r{toxinidir}/docs/requirements.txt
    pyenchant
    sphinxcontrib-spelling
commands =
    sphinx-build -b spelling docs dist/docs

[testenv:docs]
deps =
    setuptools >= 40.0.0
    -r{toxinidir}/docs/requirements.txt
use_develop = true
commands =
    sphinx-build {posargs:-E} -b doctest docs dist/docs
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs
